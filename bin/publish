#!/usr/bin/env coffee
[interpreter, script, accessKeyId, secretAccessKey, region, sourcePath, destinationBucket, destinationPath, cacheControl] = process.argv

{parse} = require "c50n"
{read} = require "fairmont"
{resolve, dirname} = require "path"
fs = require "fs"
Publisher = require "../src/publisher"

if process.argv.length == 3
  optionsFile = resolve process.cwd(), accessKeyId
  optionsDir = dirname optionsFile
  {options} = parse(read(optionsFile))
  options.sourcePath = resolve(optionsDir, options.sourcePath) if options.sourcePath?
  options.compressedDir = resolve(optionsDir, options.compressedDir) if options.compressedDir?
else
  unless accessKeyId? and secretAccessKey? and region? and sourcePath? and destinationBucket? and destinationPath?
    console.log()
    console.log "Usage:"
    console.log "         bin/publish s3-access-key-id s3-secret-access-key s3-region source-path destination-s3-bucket destination-s3-path"
    console.log "\nor\n"
    console.log "         bin/publish path/to/options.cson"
    console.log()
    return

  options = {
    accessKeyId
    secretAccessKey
    region
    sourcePath
    destinationBucket
    destinationPath
    cacheControl
    s3Options: {}
  }

unless fs.existsSync(sourcePath)
  console.log "Error: "
  console.log "           source-path does not exist\n"
  return

publisher = new Publisher options
publisher.publish options
